/**
 * Licensed to Apereo under one or more contributor license
 * agreements. See the NOTICE file distributed with this work
 * for additional information regarding copyright ownership.
 * Apereo licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a
 * copy of the License at:
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * correct.java
 *
 * Created on Jan 13, 2012, 12:28:50 PM
 */
package scripteditor;

import java.awt.Font;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;

/**
 *
 * @author Tel
 */
public class correct extends javax.swing.JDialog {

    /** Creates new form correct */
    boolean italic=false;
    boolean answers=false;
    public correct(boolean fontItalic)  {
        italic=fontItalic;
        initComponents();
        Image image=null;
        try {
            image=ImageIO.read(new File(Configuration.ApplicationPath() + "/Graphics/icon.jpg"));
          //  image=ImageIO.read(new File(Configuration.UserPath() + "/Graphics/icon.jpg"));
        } catch (IOException ex) {
            Logger.getLogger(correct.class.getName()).log(Level.SEVERE, null, ex);
        }
        setIconImage(image);
    }
    public correct(boolean fontItalic,boolean both)  {
        italic=fontItalic;
        answers=both;
        initComponents();
        Image image=null;
        try {
            image=ImageIO.read(new File(Configuration.ApplicationPath() + "/Graphics/icon.jpg"));
         //   image=ImageIO.read(new File(Configuration.UserPath() + "/Graphics/icon.jpg"));
        } catch (IOException ex) {
            Logger.getLogger(correct.class.getName()).log(Level.SEVERE, null, ex);
        }
        setIconImage(image);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setResizable(false);
        setUndecorated(true);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
   /* public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new correct().setVisible(true);
            }
        });
    }*/
    public void Answer(String ans)
    {
      
       if(italic)
       {  if(answers){
               String[] an=ans.split(",");
               jLabel1.setFont(new Font("Tahoma", Font.ITALIC, 25));
               jLabel1.setText(an[0]);
               jLabel2.setFont(new Font("Tahoma", Font.ITALIC, 25));
               jLabel2.setText(an[1]);
            }
           else{
               jLabel1.setFont(new Font("Tahoma", Font.ITALIC, 25));
               jLabel1.setText(ans);
           }
       }
       else {
            if(answers){
               String[] an=ans.split(",");
               jLabel1.setFont(new Font("Tahoma", Font.BOLD, 25));
               jLabel1.setText(an[0]);
               jLabel2.setFont(new Font("Tahoma", Font.BOLD, 25));
               jLabel2.setText(an[1]);
            }
           else{
           jLabel1.setFont(new Font("Tahoma", Font.BOLD, 25));
            jLabel1.setText(ans);
            }
       }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}

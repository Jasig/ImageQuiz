/**
 * Licensed to Apereo under one or more contributor license
 * agreements. See the NOTICE file distributed with this work
 * for additional information regarding copyright ownership.
 * Apereo licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a
 * copy of the License at:
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/*
 * SplashScreen.java
 *
 * Created on January 14, 2007, 4:01 PM
 */

package scripteditor;

import java.io.*;
import javax.imageio.*;
import java.awt.*;
import javax.swing.*;
/**
 *
 * @author  Moz123
 */
public final class SplashScreen extends JFrame {
    
    
    
    
    static String temp;
    /** Creates new form SplashScreen */
    public SplashScreen() {
         fImageId = Configuration.ApplicationPath() + "/Graphics/splash.jpg";   
       // fImageId = Configuration.UserPath() + "/Graphics/splash.jpg";
        temp = fImageId;
    }
    
    public void splash(){
        initImageAndTracker();
        setSize(fImage.getWidth(null), fImage.getHeight(null));
        center();
        
        fMediaTracker.addImage(fImage, 0);
        try {
            fMediaTracker.waitForID(0);
            //fMediaTracker.waitForAll();
        } catch(InterruptedException ie){
            System.out.println("Cannot track image load.");
        }
        
        SplashWindow splashWindow = new SplashWindow(this,fImage);
    }
    
    
    // PRIVATE//
    private final String fImageId;
    private MediaTracker fMediaTracker;
    private Image fImage;
    
    private void initImageAndTracker(){
        fMediaTracker = new MediaTracker(this);
        fImage = Toolkit.getDefaultToolkit().getImage(temp);
    }
    
    
//     * Centers the frame on the screen.
    
    
    private void center(){
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        Rectangle frame = getBounds();
        setLocation((screen.width - frame.width)/2, (screen.height - frame.height)/2);
    }
    
    private class SplashWindow extends Window {
        SplashWindow(Frame aParent, Image aImage) {
            super(aParent);
            fImage = aImage;
            setSize(fImage.getWidth(null), fImage.getHeight(null));
            Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
            Rectangle window = getBounds();
            setLocation((screen.width - window.width) / 2, (screen.height - window.height) / 2);
            setVisible(true);
            paint(this.getGraphics()); // Bug fixed March 15th (Grey Splash)
   
        }
        
       
        public void paint(Graphics graphics) {
            
            if (fImage != null) {
                graphics.drawImage(fImage,0,0,this);
                
            }
        }
        private Image fImage;
    }
    
   
    private static void main(String[] args){
       
        SplashScreen splashScreen = new SplashScreen();
        splashScreen.splash();
        try {
            Thread.sleep(2);
        } catch(InterruptedException ex) {
            System.out.println(ex);
        }
        System.exit(0);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 544, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 335, Short.MAX_VALUE)
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

    }//GEN-LAST:event_formComponentShown
    
    /**
     * @param args the command line arguments
     */
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
}

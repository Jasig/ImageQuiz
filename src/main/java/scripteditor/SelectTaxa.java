/**
 * Licensed to Apereo under one or more contributor license
 * agreements. See the NOTICE file distributed with this work
 * for additional information regarding copyright ownership.
 * Apereo licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a
 * copy of the License at:
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/*
 * SelectTaxa.java
 *
 * Created on July 13, 2006, 8:57 PM
 */

package scripteditor;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.KeyStroke;

/**
 *
 * @author  jcox
 */
public class SelectTaxa extends javax.swing.JDialog {
    
    String mTaxaLevel;
    DataBaseDriver db;
    public boolean bCancel = false;
    boolean mUseCommonNames;
    ArrayList selectedRows=new ArrayList();;
     public static boolean esc=false;//Added by preethy on 20/03/2012
      
//    SortedSet taxaList;
    /** Creates new form SelectTaxa */
    public SelectTaxa(String taxa_level, boolean commonNames, String[] prev, DataBaseDriver db_driver,int maxImages) {
        initComponents();
         addEscapeListener(this);//Added by preethy on 20/03/2012
        mTaxaLevel = taxa_level;
        mUseCommonNames = commonNames;
        db = db_driver;
       // selectedRows=sel;
        
        if(prev != null)
        {
            for(int i = 0; i < prev.length; i++)
                this.lstSelections.add(prev[i]);
            this.btnClearList.setEnabled(true);
            this.btnRemove.setEnabled(true);
            this.jButton1.setEnabled(true);
        }
//        taxaList = new TreeSet(); 
        //Set up lists
        if(taxa_level.compareTo("Family") == 0){
            this.list1.setMultipleMode(true);
            this.btnAddFamily.setEnabled(true);
        }
        else if(taxa_level.compareTo("Genus") == 0){
            this.list2.setMultipleMode(true);
            this.btnAddGenus.setEnabled(true);
        }
        else if(taxa_level.compareTo("Species") == 0){
            
            this.list3.setMultipleMode(true);
            this.btnAddSpecies.setEnabled(true);
        }
        else{
            jLabel3.setText("Common Name");
            this.list3.setMultipleMode(true);
            this.btnAddSpecies.setEnabled(true);
            // Only used with Missouri project
            //db.withSubspecies = true;
        }
       LoadFamilies();//Commented by preethy on 28-01-2012 
       // LoadFamilies2(sel);//Added by preethy
       if(maxImages>0){//Added by preethy 
           jLabel4.setText("Advanced Options set, number of images selected: "+maxImages);
           jLabel4.setForeground(Color.red);
       }
    }
    //Commented by preethy on 28-01-2012
    private void LoadFamilies()
    {
        String[] families = db.getTaxa("Family");
        for(int i = 0; i < families.length; i++)
            list1.add(families[i]);
    }
    //Added by preethy on 28-01-2012
     private void LoadFamilies2(ArrayList sel)
    {
         String[] families = db.getTaxa2("Family",sel);
        for(int i = 0; i < families.length; i++)
            list1.add(families[i]);
    }
     /**/
    
    private void LoadGenus(String family)
    {
        String[] genus = db.getGenus(family);
        for(int i = 0; i < genus.length; i++)
            list2.add(genus[i]);
    }
    
    public String[] getItems()
   {
//        String[] items;
//        items = new String[taxaList.size()];
//        Iterator iter = taxaList.iterator();
//        String temp;
//        
//        int i=0;
        String[] items = lstSelections.getItems();
//        while(true) {
//            try {
//                temp = (String)iter.next();
//                items[i] = temp;
//                i++;
//            } catch(NoSuchElementException ec) {
//                break;
//            }
//        }
        return items;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCaption = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnClearList = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnAddFamily = new javax.swing.JButton();
        btnAddGenus = new javax.swing.JButton();
        btnAddSpecies = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        list1 = new java.awt.List();
        list2 = new java.awt.List();
        list3 = new java.awt.List();
        lstSelections = new java.awt.List();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setModal(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        lblCaption.setFont(new java.awt.Font("Tahoma", 1, 11));
        lblCaption.setText("Please Make Your Selections:");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Family");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Genus");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Species");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton1.setText("Finished");
        jButton1.setEnabled(false);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton1MouseReleased(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton2MouseReleased(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.setEnabled(false);
        btnRemove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnRemoveMouseReleased(evt);
            }
        });
        btnRemove.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnRemoveKeyPressed(evt);
            }
        });

        btnClearList.setText("Clear List");
        btnClearList.setEnabled(false);
        btnClearList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnClearListMouseReleased(evt);
            }
        });
        btnClearList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnClearListKeyPressed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(btnRemove, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(jButton2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(btnClearList)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton1)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(new java.awt.Component[] {btnClearList, btnRemove, jButton1, jButton2}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(btnRemove)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btnClearList)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 36, Short.MAX_VALUE)
                .add(jButton1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButton2)
                .addContainerGap())
        );

        btnAddFamily.setText("Add");
        btnAddFamily.setEnabled(false);
        btnAddFamily.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddFamilyMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnAddFamilyMouseReleased(evt);
            }
        });
        btnAddFamily.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAddFamilyKeyPressed(evt);
            }
        });

        btnAddGenus.setText("Add");
        btnAddGenus.setEnabled(false);
        btnAddGenus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddGenusMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnAddGenusMouseReleased(evt);
            }
        });
        btnAddGenus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAddGenusKeyPressed(evt);
            }
        });

        btnAddSpecies.setText("Add");
        btnAddSpecies.setEnabled(false);
        btnAddSpecies.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddSpeciesMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnAddSpeciesMouseReleased(evt);
            }
        });
        btnAddSpecies.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAddSpeciesKeyPressed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(55, 55, 55)
                .add(btnAddFamily)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 143, Short.MAX_VALUE)
                .add(btnAddGenus)
                .add(134, 134, 134)
                .add(btnAddSpecies)
                .add(33, 33, 33))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                .add(btnAddFamily)
                .add(btnAddGenus)
                .add(btnAddSpecies))
        );

        jLabel5.setText("Your selections");

        list1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                list1MouseReleased(evt);
            }
        });

        list2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                list2MouseReleased(evt);
            }
        });

        list3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                list3MouseReleased(evt);
            }
        });

        lstSelections.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstSelectionsMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lstSelectionsMouseReleased(evt);
            }
        });
        lstSelections.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                lstSelectionsItemStateChanged(evt);
            }
        });

        jLabel6.setText("Total number of images selected:");

        jLabel7.setText("0");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(lblCaption, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 590, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(lstSelections, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 366, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(list1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 179, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(layout.createSequentialGroup()
                                .add(60, 60, 60)
                                .add(jLabel1)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 32, Short.MAX_VALUE)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(list2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 175, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(16, 16, 16))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .add(jLabel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(42, 42, 42)))
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(79, 79, 79)
                                .add(jLabel3))
                            .add(layout.createSequentialGroup()
                                .add(18, 18, 18)
                                .add(list3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))))
                    .add(layout.createSequentialGroup()
                        .add(jLabel5)
                        .add(86, 86, 86)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                            .add(layout.createSequentialGroup()
                                .add(jLabel6)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(lblCaption, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jLabel2)
                    .add(jLabel3))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(list1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                    .add(list2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                    .add(list3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(lstSelections, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(jLabel6)
                    .add(jLabel7))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddSpeciesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddSpeciesMouseReleased
// TODO add your handling code here:
        if(btnAddSpecies.isEnabled()){
            if(list3.getSelectedIndexes().length > 0){
                if(mTaxaLevel.compareTo("Species")==0)
                    addFromList(list3, list1.getSelectedItem() + " " + list2.getSelectedItem() + " ");
                else
                    addFromList(list3, list1.getSelectedItem() + " ");
                jButton1.setEnabled(true);
                btnClearList.setEnabled(true);
            }
              //Added by preethy on 28-01-2012
            String[] items = lstSelections.getItems();
              String[][] fileNames;
              fileNames = db.getFileNames(mTaxaLevel, items, false, 0);
          
              jLabel7.setText(""+fileNames.length);
              /**/
        }
    }//GEN-LAST:event_btnAddSpeciesMouseReleased

    private void btnAddGenusMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddGenusMouseReleased
// TODO add your handling code here:
        if(btnAddGenus.isEnabled()){
            if(list2.getSelectedIndexes().length > 0){
                addFromList(list2,list1.getSelectedItem() + " ");
                jButton1.setEnabled(true);
                btnClearList.setEnabled(true);
            }
              //Added by preethy on 28-01-2012
            String[] items = lstSelections.getItems();
              String[][] fileNames;
              fileNames = db.getFileNames(mTaxaLevel, items, false, 0);
              jLabel7.setText(""+fileNames.length);
              /**/
        }
    }//GEN-LAST:event_btnAddGenusMouseReleased

    private void btnAddFamilyMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddFamilyMouseReleased
// TODO add your handling code here:
        if(btnAddFamily.isEnabled()){
            if(list1.getSelectedIndexes().length > 0) {
                addFromList(list1, "");
                jButton1.setEnabled(true);
                btnClearList.setEnabled(true);
            }
            //Added by preethy on 28-01-2012
            String[] items = lstSelections.getItems();
              String[][] fileNames;
              fileNames = db.getFileNames(mTaxaLevel, items, false, 0);
              jLabel7.setText(""+fileNames.length);
             
              /**/
        }
    }//GEN-LAST:event_btnAddFamilyMouseReleased

    private void lstSelectionsMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstSelectionsMouseReleased
// TODO add your handling code here:        
        if(lstSelections.getItemCount() > 0){
        btnRemove.setEnabled(true);
        }
        
    }//GEN-LAST:event_lstSelectionsMouseReleased

    private void btnClearListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearListMouseReleased
// TODO add your handling code here:
        if(btnClearList.isEnabled()){
            lstSelections.removeAll();
            btnClearList.setEnabled(false);
            btnRemove.setEnabled(false);
            this.jButton1.setEnabled(false);
            jLabel7.setText("0");//Added by preethy on 28-01-2012
        }
    }//GEN-LAST:event_btnClearListMouseReleased

    private void btnRemoveMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemoveMouseReleased
// TODO add your handling code here:
        if(btnRemove.isEnabled()){
            
            String rItem = lstSelections.getSelectedItem();
            this.lstSelections.remove(lstSelections.getSelectedIndex());
            btnRemove.setEnabled(false);
            if(lstSelections.getItemCount() == 0){
                btnClearList.setEnabled(false);
                jButton1.setEnabled(false);
            }
            if(mTaxaLevel.compareTo("Family") == 0){
                deselectItem(list1, rItem);
            }
            else{
                rItem = rItem.substring(rItem.lastIndexOf(' ') + 1);
                if(mTaxaLevel.compareTo("Genus") == 0){
                    deselectItem(list2, rItem);
                }
                else if(mTaxaLevel.compareTo("Species") == 0){
                    deselectItem(list3, rItem);
                }
//                else{
                    // subspecies
                 //   deselectItem(list4, rItem);
//                }
                
                
            }
           
                //Added by preethy on 28-01-2012
              String[] items = lstSelections.getItems();
              String[][] fileNames;
              fileNames = db.getFileNames(mTaxaLevel, items, false, 0);
              jLabel7.setText(""+fileNames.length);
              /**/
        }
    }//GEN-LAST:event_btnRemoveMouseReleased

    private void deselectItem(java.awt.List list, String item){
        int[] indexes = list.getSelectedIndexes();

        for(int i = 0; i < indexes.length; i++){
            if(list.getItem(indexes[i]).compareTo(item) == 0){
                list.deselect(indexes[i]);
                return;
            }
        }
    }
    

    private void lstSelectionsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstSelectionsMouseClicked
// TODO add your handling code here:

    }//GEN-LAST:event_lstSelectionsMouseClicked

    private void jButton1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseReleased
// TODO add your handling code here:
        if(jButton1.isEnabled()){
            this.setVisible(false);
        }
    }//GEN-LAST:event_jButton1MouseReleased

    private void jButton2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseReleased
// TODO add your handling code here:
        bCancel = true;
        this.setVisible(false);
    }//GEN-LAST:event_jButton2MouseReleased

    private void btnAddSpeciesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddSpeciesMouseClicked
// TODO add your handling code here:

    }//GEN-LAST:event_btnAddSpeciesMouseClicked

    private void btnAddGenusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddGenusMouseClicked
// TODO add your handling code here:

    }//GEN-LAST:event_btnAddGenusMouseClicked

    private void list3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_list3MouseReleased
// TODO add your handling code here:
//if(mTaxaLevel.compareTo("Subspecies")==0)
       // {
          //  String[] items = db.getSubspecies(list3.getSelectedItem());
           // list4.removeAll();
           // for(int i = 0; i < items.length; i++)
            //   list4.add(items[i]);
       // }
    }//GEN-LAST:event_list3MouseReleased

    private void btnAddFamilyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddFamilyMouseClicked
// TODO add your handling code here:

    }//GEN-LAST:event_btnAddFamilyMouseClicked

    private void addFromList(java.awt.List list, String prefix)
    {
        String[] selections = list.getSelectedItems();
        for(int i = 0; i < selections.length; i++){
            try{
            lstSelections.remove(prefix + selections[i]);
           
            }
            catch(IllegalArgumentException e){}
            
            lstSelections.add(prefix + selections[i]);
//            taxaList.add(prefix + selections[i]);
        }
    }
    
    private void list2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_list2MouseReleased
// TODO add your handling code here:
        if(mTaxaLevel.compareTo("Family") == 0)
            return;
        else if(mTaxaLevel.compareTo("Genus") == 0)
            return;
        
        String[] s;
        if(mTaxaLevel.compareTo("Common Name")==0){
            //Load species
            s = db.getCommonName(this.list2.getSelectedItem());
        } else{
            s = db.getSpecies(this.list2.getSelectedItem());     
        }
        list3.removeAll();
        //  if(this.list4.isEnabled())
        //    list4.removeAll();
        for(int i = 0; i < s.length; i++)
            this.list3.add(s[i]);
        
        
    }//GEN-LAST:event_list2MouseReleased

    private void list1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_list1MouseReleased
// TODO add your handling code here:
        if(mTaxaLevel.compareTo("Family") != 0)
        {
            list2.removeAll();
            if(list3.isEnabled())
                list3.removeAll();
          //  if(list4.isEnabled())
           //     list4.removeAll();
            LoadGenus(list1.getSelectedItem());
        }
    }//GEN-LAST:event_list1MouseReleased

    private void lstSelectionsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_lstSelectionsItemStateChanged
        
    }//GEN-LAST:event_lstSelectionsItemStateChanged

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
       
         //Added by preethy on 28-01-2012
            String[] items = lstSelections.getItems();
              String[][] fileNames;
              fileNames = db.getFileNames(mTaxaLevel, items, false, 0);
              jLabel7.setText(""+fileNames.length);
             
              /**/
        
    }//GEN-LAST:event_formWindowOpened

    private void btnRemoveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnRemoveKeyPressed
        // TODO add your handling code here:
           if(btnRemove.isEnabled()){
            
            String rItem = lstSelections.getSelectedItem();
            this.lstSelections.remove(lstSelections.getSelectedIndex());
            btnRemove.setEnabled(false);
            if(lstSelections.getItemCount() == 0){
                btnClearList.setEnabled(false);
                jButton1.setEnabled(false);
            }
            if(mTaxaLevel.compareTo("Family") == 0){
                deselectItem(list1, rItem);
            }
            else{
                rItem = rItem.substring(rItem.lastIndexOf(' ') + 1);
                if(mTaxaLevel.compareTo("Genus") == 0){
                    deselectItem(list2, rItem);
                }
                else if(mTaxaLevel.compareTo("Species") == 0){
                    deselectItem(list3, rItem);
                }
//                else{
                    // subspecies
                 //   deselectItem(list4, rItem);
//                }
                
                
            }
           
                //Added by preethy on 28-01-2012
              String[] items = lstSelections.getItems();
              String[][] fileNames;
              fileNames = db.getFileNames(mTaxaLevel, items, false, 0);
              jLabel7.setText(""+fileNames.length);
              /**/
        }
    }//GEN-LAST:event_btnRemoveKeyPressed

    private void btnClearListKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnClearListKeyPressed
        // TODO add your handling code here:
         if(btnClearList.isEnabled()){
            lstSelections.removeAll();
            btnClearList.setEnabled(false);
            btnRemove.setEnabled(false);
            this.jButton1.setEnabled(false);
            jLabel7.setText("0");//Added by preethy on 28-01-2012
        }
    }//GEN-LAST:event_btnClearListKeyPressed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
        if(jButton1.isEnabled()){
            this.setVisible(false);
        }
    }//GEN-LAST:event_jButton1KeyPressed

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed
        // TODO add your handling code here:
        bCancel = true;
        this.setVisible(false);
    }//GEN-LAST:event_jButton2KeyPressed

    private void btnAddFamilyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAddFamilyKeyPressed
        // TODO add your handling code here:
         if(btnAddFamily.isEnabled()){
            if(list1.getSelectedIndexes().length > 0) {
                addFromList(list1, "");
                jButton1.setEnabled(true);
                btnClearList.setEnabled(true);
            }
            //Added by preethy on 28-01-2012
            String[] items = lstSelections.getItems();
              String[][] fileNames;
              fileNames = db.getFileNames(mTaxaLevel, items, false, 0);
              jLabel7.setText(""+fileNames.length);
             
              /**/
        }
    }//GEN-LAST:event_btnAddFamilyKeyPressed

    private void btnAddGenusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAddGenusKeyPressed
        // TODO add your handling code here:
         if(btnAddGenus.isEnabled()){
            if(list2.getSelectedIndexes().length > 0){
                addFromList(list2,list1.getSelectedItem() + " ");
                jButton1.setEnabled(true);
                btnClearList.setEnabled(true);
            }
              //Added by preethy on 28-01-2012
            String[] items = lstSelections.getItems();
              String[][] fileNames;
              fileNames = db.getFileNames(mTaxaLevel, items, false, 0);
              jLabel7.setText(""+fileNames.length);
              /**/
        }
    }//GEN-LAST:event_btnAddGenusKeyPressed

    private void btnAddSpeciesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAddSpeciesKeyPressed
        // TODO add your handling code here:
        if(btnAddSpecies.isEnabled()){
            if(list3.getSelectedIndexes().length > 0){
                if(mTaxaLevel.compareTo("Species")==0)
                    addFromList(list3, list1.getSelectedItem() + " " + list2.getSelectedItem() + " ");
                else
                    addFromList(list3, list1.getSelectedItem() + " ");
                jButton1.setEnabled(true);
                btnClearList.setEnabled(true);
            }
              //Added by preethy on 28-01-2012
            String[] items = lstSelections.getItems();
              String[][] fileNames;
              fileNames = db.getFileNames(mTaxaLevel, items, false, 0);
             
              jLabel7.setText(""+fileNames.length);
              /**/
        }
    }//GEN-LAST:event_btnAddSpeciesKeyPressed
public static void addEscapeListener(final JDialog dialog) { 
    ActionListener escListener = new ActionListener() { 
        @Override       
        public void actionPerformed(ActionEvent e) { 
            
            esc=true;
            dialog.setVisible(false);        }    }; 
    dialog.getRootPane().registerKeyboardAction(escListener,KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0),JComponent.WHEN_IN_FOCUSED_WINDOW);
}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddFamily;
    private javax.swing.JButton btnAddGenus;
    private javax.swing.JButton btnAddSpecies;
    private javax.swing.JButton btnClearList;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblCaption;
    private java.awt.List list1;
    private java.awt.List list2;
    private java.awt.List list3;
    private java.awt.List lstSelections;
    // End of variables declaration//GEN-END:variables
    
}

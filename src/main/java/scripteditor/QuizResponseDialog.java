/**
 * Licensed to Apereo under one or more contributor license
 * agreements. See the NOTICE file distributed with this work
 * for additional information regarding copyright ownership.
 * Apereo licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a
 * copy of the License at:
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on
 * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
/*
 * QuizResponseDialog.java
 *
 * Created on July 1, 2006, 4:01 PM
 */

package scripteditor;

import java.awt.event.*;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.*;
import javax.swing.text.*;
import java.awt.datatransfer.*;
import java.awt.*;
import java.io.File;
import javax.imageio.ImageIO;

/**
 *
 * @author  Moz123
 */
public class QuizResponseDialog extends javax.swing.JDialog   {
    String mResponse;
    String mTaxaLevel;
    Clipboard clip;
    StringSelection mySelection = new StringSelection("");

    public boolean mRunning = true;
    public boolean close=false;//Added by preethy on 28-01-2012;
     public boolean no=false;//Added by preethy on 28-01-2012;
    /** Creates new form QuizResponseDialog */
    public QuizResponseDialog(String taxaLevel, boolean comp) {
        mTaxaLevel = taxaLevel;
       initComponents();
        Image image=null;
        try {
             image=ImageIO.read(new File(Configuration.ApplicationPath() + "/Graphics/icon.jpg"));//Commented by preethy on 16-03-2012
            //  image=ImageIO.read(new File(Configuration.UserPath() + "/Graphics/icon.jpg"));
        } catch (IOException ex) {
            Logger.getLogger(QuizResponseDialog.class.getName()).log(Level.SEVERE, null, ex);
        }

         setIconImage(image);
       this.addWindowListener(EXIT_ON_CLOSE);
        this.setModal(true);
        if(comp == true){
             lbMessage.setText("Same " + taxaLevel + "?" + " (Y/N)");
        }
        else
            lbMessage.setText("Enter " + taxaLevel + ":");

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btOK = new javax.swing.JButton();
        tfResponse = new javax.swing.JTextField();
        lbMessage = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        btOK.setText("Continue");
        btOK.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btOKKeyPressed(evt);
            }
        });
        btOK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btOKMouseReleased(evt);
            }
        });

        tfResponse.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfResponseKeyPressed(evt);
            }
        });

        lbMessage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbMessage.setText("jLabel1");

        jButton1.setText("Quit");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton1MouseReleased(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(151, Short.MAX_VALUE)
                .add(lbMessage)
                .add(103, 103, 103))
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(54, 54, 54)
                        .add(btOK)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton1))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(tfResponse, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 264, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        layout.linkSize(new java.awt.Component[] {btOK, jButton1}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(lbMessage)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(tfResponse, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(btOK)
                    .add(jButton1))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

        ok();
        //close=true;
       // stop();
      //addWindowListener(0);
        /// TODO add your handling code here:

    }//GEN-LAST:event_formWindowClosing

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed

        stop();
    }//GEN-LAST:event_jButton1KeyPressed

    private void btOKKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btOKKeyPressed

        ok();
    }//GEN-LAST:event_btOKKeyPressed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        tfResponse.requestFocus();
        try {

            clip = Toolkit.getDefaultToolkit().getSystemClipboard();
        } catch (HeadlessException ex) {
            Utilities.MessageDialog(this, "Problem");
        }
        clip.setContents(mySelection, mySelection);// TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void jButton1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseReleased
         stop();
    }//GEN-LAST:event_jButton1MouseReleased

    private void btOKMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btOKMouseReleased
         ok();
    }//GEN-LAST:event_btOKMouseReleased

    private void tfResponseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfResponseKeyPressed
        int keyCode = evt.getKeyCode();
        if(keyCode == KeyEvent.VK_ENTER){
            btOKMouseReleased(null);
        }
    }//GEN-LAST:event_tfResponseKeyPressed

    public String getResponse(){

        return mResponse;
    }
    public void resetResponse(){
        mResponse = "";
    }
    public void forCloseResponse(){

        mResponse = null;
    }
    public void stop(){
        int ret = Utilities.ConfirmDialog(this, "Are you sure you want to quit?", "Quit?");
    if(ret == JOptionPane.YES_OPTION)
    {
        mRunning = false;
        this.hide();

    }else{
        no=true;
        this.show();
    }
    }

    public void ok(){
        mResponse = tfResponse.getText();
        this.hide();
        tfResponse.setText("");
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btOK;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel lbMessage;
    private javax.swing.JTextField tfResponse;
    // End of variables declaration//GEN-END:variables

    private void addWindowListener(int param)
    {

      if(param == 0)
      {

          int ret = Utilities.ConfirmDialog(this, "Are you sure you want to quit?", "Quit?");
        if(ret == JOptionPane.YES_OPTION)
        {
            mRunning = false;
            this.hide();
        }
        else
        {

        }
      }
    }



}
